franka_pole:
  # Essential
  arm_id: "$(arg arm_id)"
  simulated: $(arg simulated)
  model: "$(arg model)"

  # Periods
  franka_period: 1 # frequency of franka state update
  pole_period: 10 # frequency of pole state update
  command_period: 1  # frequency of franka command update
  publish_period: 10 # frequency of publisher invocation
  controller_period: 1 # frequency of high-level controller invocation
  
  # Target state and constraints
  target_effector_position: [ 0.6, 0.0, 0.6 ]
  target_effector_orientation: { w: 1.0, x: 0.0, y: 0.0, z: 0.0 }
  target_joint0_position: .NaN # fallbacks to atan2(target_effector_position[1] / target_effector_position[0])
  min_effector_position: [ 0.4, -0.3, 0.6 ]
  max_effector_position: [ 0.8, 0.3, 0.6 ]

  # Initial state
  initial_effector_position: [ .NaN, .NaN, .NaN ] # fallbacks to target_effector_position
  initial_effector_orientation: { w: .NaN, x: .NaN, y: .NaN, z: .NaN } # fallbacks to target_effector_orientation
  initial_joint0_position: .NaN # fallbacks to atan2(initial_effector_position[1] / initial_effector_position[0])
  initial_pole_positions: [ 0.0, 0.0 ]
  initial_pole_velocities: [ 0.0, 0.0 ]
  
  # Stiffness
  outbound_translation_stiffness: [ 200.0, 200.0, 200.0 ]
  outbound_translation_damping: [ .NaN, .NaN, .NaN ] # fallbacks to 2 * sqrt(outbound_translation_stiffness)
  outbound_rotation_stiffness: [ 50.0, 50.0, 50.0 ]
  outbound_rotation_damping: [ .NaN, .NaN, .NaN ] # fallbacks to 2 * sqrt(outbound_rotation_stiffness)
  translation_stiffness: [ .NaN, .NaN, .NaN ] # fallbacks to 2 * sqrt(outbound_translation_stiffness)
  translation_damping: [ .NaN, .NaN, .NaN ] # fallbacks to 2 * sqrt(translation_stiffness)
  rotation_stiffness: [ .NaN, .NaN, .NaN ] # fallbacks to 2 * sqrt(outbound_rotation_stiffness)
  rotation_damping: [ .NaN, .NaN, .NaN ] # fallbacks to 2 * sqrt(rotation_stiffness)

  joint_stiffness: [ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 ]
  joint_damping: [ .NaN, .NaN, .NaN, .NaN, .NaN, .NaN, .NaN ] # fallbacks to 2 * sqrt(joint_stiffness)

  nullspace_stiffness: [ 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5 ]
  nullspace_damping: [ .NaN, .NaN, .NaN, .NaN, .NaN, .NaN, .NaN ]

  dynamics: 1.0
  
  # Filters
  pole_angle_filter: 0.0
  pole_dangle_filter: 0.7 # fallbacks to pole_angle_filter

  # Noise
  joint_position_standard_deviation: [ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 ]
  joint_velocity_standard_deviation: [ .NaN, .NaN, .NaN, .NaN, .NaN, .NaN, .NaN ] # fallbacks to joint_position_standard_deviation
  pole_angle_standard_deviation: [ 0.0, 0.0 ]

  # Reset
  hardware_reset_durtion: 5.0
  hardware_reset_stiffness: [ 600.0, 600.0, 600.0, 600.0, 250.0, 150.0, 50.0 ]
  hardware_reset_damping: [ .NaN, .NaN, .NaN, .NaN, .NaN, .NaN, .NaN ] # fallbacks to 2 * sqrt(hardware_reset_stiffness)

  # Control
  control: [ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 ]
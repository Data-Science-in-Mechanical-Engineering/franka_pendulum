<?xml version="1.0"?>
<launch>

  <!-- Customization -->
  <arg name="gazebo"      default="true"     doc="Should the gazebo simulation be launched? Use false in case if you want to run on the real hardware" />
  <arg name="headless"    default="false"    doc="Should the gazebo GUI be launched?" />
  <arg name="paused"      default="false"    doc="Should the simulation directly be stopped at 0s?" />
  <arg name="arm_id"  	  default="panda"    doc="Name of the arm" />
  <arg name="controller"  default="position" doc="Controller type, position/velocity/torque" />
  <arg name="initial_joint_positions"
       doc="Initial joint configuration of the panda. Specify as a list of name/value pairs in form of '-J [name-of-joint] [value-in-rad]'. Default is a 90 degree bend in the elbow"
       default="-J $(arg arm_id)_joint1 0
                -J $(arg arm_id)_joint2 0
                -J $(arg arm_id)_joint3 0
                -J $(arg arm_id)_joint4 -1.57079632679
                -J $(arg arm_id)_joint5 0
                -J $(arg arm_id)_joint6 1.57079632679
                -J $(arg arm_id)_joint7 0.785398163397
                -J $(arg arm_id)_finger_joint1 0.001
                -J $(arg arm_id)_finger_joint2 0.001"
       />

  <!-- Launch gazebo -->
  <group if="$(arg gazebo)">
  
    <!-- Load world -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch" if="$(arg gazebo)">
      <arg name="world_name" value="worlds/empty.world"/>
      <!-- Always start in paused mode, and only unpause when spawning the model -->
      <arg name="paused" value="true"/>
      <arg name="gui" value="$(eval not arg('headless'))"/>
      <arg name="use_sim_time" value="false"/>
    </include>
    
    <!-- Define robot -->
    <param name="robot_description" command="xacro $(find franka_pole)/franka_pole.xacro arm_id:=$(arg arm_id)" />

    <!-- Load controllers -->
    <rosparam file="$(find franka_gazebo)/config/franka_hw_sim.yaml" subst_value="true" />
    <rosparam file="$(find franka_gazebo)/config/sim_controllers.yaml" subst_value="true" />

    <!-- Create robot -->
    <arg name="unpause" value="$(eval '' if arg('paused') else '-unpause')" />
    <node name="$(arg arm_id)_model_spawner"
     pkg="gazebo_ros"
     type="spawn_model"
     args="-param robot_description -urdf -model $(arg arm_id) $(arg initial_joint_positions) $(arg unpause)"/>
  </group>

  <!-- Start controllers -->  
  <node name="$(arg arm_id)_position_controller_spawner"
    pkg="controller_manager"
    type="spawner"
    respawn="false" output="screen"
    args="cartesian_impedance_example_controller"
    if="$(eval arg('controller') == 'position')"
  />
  <node name="$(arg arm_id)_force_controller_spawner"
    pkg="controller_manager"
    type="spawner"
    respawn="false" output="screen"
    args="force_example_controller"
    if="$(eval arg('controller') == 'torque')"
  />
  <node name="$(arg arm_id)_gripper_controller_spawner"
    pkg="controller_manager"
    type="spawner"
    respawn="false" output="screen"
    args="franka_gripper"
  />
  
  <!-- Start custom controller -->
  <node name="controller" pkg="franka_pole" type="controller.py" required="true" output="screen" >
    <param name="controller" value="$(arg controller)" />
    <param name="gazebo" value="$(arg gazebo)" />
    <param name="arm_id" value="$(arg arm_id)" />
  </node>
      
  <!-- Start plotter -->
  <node name="plotter" pkg="franka_pole" type="plotter.py" required="true" output="screen" >
    <param name="controller" value="$(arg controller)" />
    <param name="gazebo" value="$(arg gazebo)" />
    <param name="arm_id" value="$(arg arm_id)" />
  </node>

</launch>
